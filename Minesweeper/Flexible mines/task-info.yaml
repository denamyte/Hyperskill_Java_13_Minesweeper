type: edu
custom_name: stage2
files:
- name: src/minesweeper/Main.java
  visible: true
  text: |
    package minesweeper;

    public class Main {
        public static void main(String[] args) {
            // write your code here
        }
    }
  learner_created: false
- name: test/MinesweeperTest.java
  visible: false
  text: |
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testcase.TestCase;
    import org.hyperskill.hstest.testing.TestedProgram;

    import java.util.*;
    import java.util.stream.Collectors;

    public class MinesweeperTest extends StageTest<Integer> {
        @Override
        public List<TestCase<Integer>> generate() {
            List<TestCase<Integer>> tests = new ArrayList<>();
            for (int i = 1; i <= 50; i++) {
                int mines = i;
                TestCase<Integer> test = new TestCase<Integer>()
                    .setDynamicTesting(() -> {
                        TestedProgram main = new TestedProgram();
                        main.start();
                        String output = main.execute("" + mines);
                        return test(output, mines);
                    });
                tests.add(test);
                tests.add(test);
            }
            return tests;
        }

        public CheckResult test(String reply, Integer attach) {
            List<String> lines =
                Arrays.stream(reply.split("\n"))
                    .map(String::trim)
                    .collect(Collectors.toList());

            if (lines.isEmpty()) {
                return CheckResult.wrong(
                    "Looks like you didn't output a single line!"
                );
            }

            if (lines.size() != 9) {
                return CheckResult.wrong(
                    "You should output exactly 9 lines of the field. Found: " + lines.size() + "."
                );
            }

            int mines = 0;

            for (String line : lines) {
                if (line.length() != 9) {
                    return CheckResult.wrong(
                        "One of the lines of the field doesn't have 9 symbols, " +
                            "but has " + line.length() + ".\n" +
                            "This line is \"" + line + "\""
                    );
                }

                for (char c : line.toCharArray()) {
                    if (c != 'X' && c != '.') {
                        return CheckResult.wrong(
                            "One of the characters is not equal to either 'X' or '.'.\n" +
                                "In this line: \"" + line + "\"."
                        );
                    }
                    if (c == 'X') {
                        mines++;
                    }
                }
            }

            if (attach != mines) {
                return CheckResult.wrong(
                    "Expected to see " + attach + " mines, found " + mines
                );
            }

            return CheckResult.correct();
        }
    }
  learner_created: false
- name: src/minesweeper/Minesweeper.java
  visible: true
  text: |
    package minesweeper;

    import java.util.*;

    public class Minesweeper {

        private static final String SAFE_CELL = ".";
        private static final String MINE = "X";

        private final Random RANDOM;
        private final String[][] field;
        private final int rows;
        private final int cols;

        public Minesweeper(int rows, int cols) {
            RANDOM = new Random(System.currentTimeMillis());
            field = prepareField(rows, cols);
            this.rows = rows;
            this.cols = cols;
        }

        private static String[][] prepareField(int rows, int cols) {
            String[][] field = new String[rows][cols];
            for (String[] row : field) {
                Arrays.fill(row, SAFE_CELL);
            }
            return field;
        }

        public void mine(int mineCount) {
            if (mineCount > rows * cols / 3) {  // Just not that many
                throw new IllegalArgumentException("Too many mines");
            }
            generateMines(mineCount).forEach(flatCrd -> field[flatCrd / rows][flatCrd % rows] = MINE);
        }

        private Set<Integer> generateMines(int mineCount) {
            Set<Integer> mines = new HashSet<>();
            final int cellCount = rows * cols;
            for (int i = 1; i <= mineCount; i++) {
                while (mines.size() < i) {
                    mines.add(RANDOM.nextInt(cellCount));
                }
            }
            return mines;
        }

        public String render() {
            StringBuilder sb = new StringBuilder();
            for (String[] row : field) {
                sb.append(String.join("", row));
                sb.append('\n');
            }
            sb.setLength(sb.length() - 1);

            return sb.toString();
        }
    }
  learner_created: true
- name: src/minesweeper/MinesweeperGameplayFacade.java
  visible: true
  learner_created: true
feedback_link: https://hyperskill.org/projects/77/stages/427/implement#comment
status: Solved
feedback:
  message: Congratulations!
  time: Wed, 19 May 2021 22:47:58 UTC
record: -1
